name: Build MySQL

on:
  workflow_run:
    workflows: ["Bump Version"]
    types:
      - completed

jobs:
  build:
    permissions: write-all
    defaults:
      run:
        working-directory: mysql
    strategy:
      matrix:
        os: [linux, windows]
        include:
          - os: linux
            runs_on: ubuntu-22.04
            target1: i686-unknown-linux-gnu
            target2: x86_64-unknown-linux-gnu
            extra_deps: |
              sudo apt update
              sudo apt install gcc-i686-linux-gnu
              sudo apt install gcc-multilib
            binary_prefix: "lib"
            file_ext: "so"
            suffix32: _linux.dll
            suffix64: _linux64.dll
          - os: windows
            runs_on: windows-2022
            target1: i686-pc-windows-msvc
            target2: x86_64-pc-windows-msvc
            extra_deps: ""
            binary_prefix: ""
            file_ext: "dll"
            suffix32: _win32.dll
            suffix64: _win64.dll
    runs-on: ${{ matrix.runs_on }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - uses: actions/download-artifact@v4
        with:
          name: version
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version
        id: get_version
        shell: bash
        run: |
          echo "version=$(cat ../version.txt)" >> $GITHUB_OUTPUT
          echo "version_major=$(cat ../version_major.txt)" >> $GITHUB_OUTPUT

      - name: Set up Rust
        run: rustup toolchain install stable --profile minimal

      - name: Install build dependencies
        if: matrix.os == 'linux'
        run: ${{ matrix.extra_deps }}

      - name: Add targets
        run: rustup target add ${{ matrix.target1 }} ${{ matrix.target2 }}

      - name: Install cargo-set-version
        run: cargo install cargo-set-version

      - name: Bump Cargo version
        run: cargo set-version "${{ steps.get_version.outputs.version }}.0"

      - name: Build targets
        run: |
          cargo build --release --target ${{ matrix.target1 }}
          cargo build --release --target ${{ matrix.target2 }}

      - name: Rename binaries
        run: |
          mv target/${{ matrix.target1 }}/release/${{ matrix.binary_prefix }}gmsv_goobie_mysql.${{ matrix.file_ext }} target/${{ matrix.target1 }}/release/gmsv_goobie_mysql_${{ steps.get_version.outputs.version_major }}${{ matrix.suffix32 }}
          mv target/${{ matrix.target2 }}/release/${{ matrix.binary_prefix }}gmsv_goobie_mysql.${{ matrix.file_ext }} target/${{ matrix.target2 }}/release/gmsv_goobie_mysql_${{ steps.get_version.outputs.version_major }}${{ matrix.suffix64 }}

      - name: Release Artifacts
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          token: "${{ secrets.GITHUB_TOKEN }}"
          tag: "${{ steps.get_version.outputs.version }}"
          artifacts: |
            mysql/target/${{ matrix.target1 }}/release/gmsv_goobie_mysql_${{ steps.get_version.outputs.version_major }}${{ matrix.suffix32 }}
            mysql/target/${{ matrix.target2 }}/release/gmsv_goobie_mysql_${{ steps.get_version.outputs.version_major }}${{ matrix.suffix64 }}
